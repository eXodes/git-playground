{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["variants","hidden","opacity","visible","App","useState","count","setCount","online","useNetworkState","className","motion","img","src","logo","initial","animate","alt","style","marginBlockEnd","onClick","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,MAA0B,iC,+BCMnCA,EAAW,CACfC,OAAQ,CAAEC,QAAS,GACnBC,QAAS,CAAED,QAAS,IAsCPE,MAnCf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAWC,cAAXD,OAER,OACE,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACC,EAAA,EAAOC,IAAR,CACEC,IAAKC,EACLC,QAAQ,SACRC,QAAQ,UACRhB,SAAUA,EACVU,UAAU,WACVO,IAAI,SAEN,8CAAiBT,EAAS,eAAO,kBACjC,mEACA,uBAAOU,MAAO,CAAEC,eAAgB,QAAhC,8CAGA,4BAAIb,IACJ,wBAAQc,QAAS,kBAAMb,EAASD,EAAQ,IAAxC,sBACA,mBACEI,UAAU,WACVW,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCrBOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad662219.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from 'react'\nimport { useNetworkState } from \"react-use\";\nimport { motion } from \"framer-motion\";\n\nconst variants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 },\n};\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const { online } = useNetworkState();\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <motion.img\n          src={logo}\n          initial='hidden'\n          animate='visible'\n          variants={variants}\n          className='App-logo'\n          alt='logo'\n        />\n        <p>Currently is {online ? \"üòÄ\" : \"üòê\"}</p>\n        <p>Handling complex Git flow is hard!</p>\n        <small style={{ marginBlockEnd: \"1rem\" }}>\n          Not sure if I can do this right.\n        </small>\n        <p>{count}</p>\n        <button onClick={() => setCount(count + 1)}>Click me</button>\n        <a\n          className='App-link'\n          href='https://reactjs.org'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}